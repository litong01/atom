#!/bin/bash
# This script sets up keycloak and ldap and also add ldap schema and users to ldap
# At the end, it added command to verify ldap entry.

# Create a user lidf file, which will be mounted to ldap container to load up
# ldap with users
cat << EOF > /tmp/users.ldif
# LDIF Export for dc=example,dc=org
# Server: openldap (openldap)
# Search Scope: sub
# Search Filter: (objectClass=*)
# Total Entries: 10
#
# Generated by phpLDAPadmin (http://phpldapadmin.sourceforge.net) on March 6, 2018 5:56 pm
# Version: 1.2.3

version: 1

## Entry 1: dc=example,dc=org
dn: dc=example,dc=org
dc: example
o: "MyExample Inc."
objectclass: top
objectclass: dcObject
objectclass: organization

## Entry 2: cn=admint,dc=example,dc=org
dn: cn=admint,dc=example,dc=org
cn: admint
description: LDAP administrator
objectclass: simpleSecurityObject
objectclass: organizationalRole
userpassword: {SSHA}iGmwNRRDcGxmafPklI1kcKivNq8cCb4j

# Entry 3: ou=groups,dc=example,dc=org
dn: ou=groups,dc=example,dc=org
objectclass: organizationalUnit
objectclass: top
ou: groups

# Entry 4: cn=admin,ou=groups,dc=example,dc=org
dn: cn=admin,ou=groups,dc=example,dc=org
cn: admin
gidnumber: 501
memberuid: 1003
objectclass: posixGroup
objectclass: top

# Entry 5: cn=developers,ou=groups,dc=example,dc=org
dn: cn=developers,ou=groups,dc=example,dc=org
cn: developers
gidnumber: 500
memberuid: 1000
memberuid: 1001
memberuid: 1002
objectclass: posixGroup
objectclass: top

# Entry 6: ou=users,dc=example,dc=org
dn: ou=users,dc=example,dc=org
objectclass: organizationalUnit
objectclass: top
ou: users

# Entry 7: cn=Bill Gates,ou=users,dc=example,dc=org
dn: cn=Bill Gates,ou=users,dc=example,dc=org
cn: Bill Gates
gidnumber: 500
givenname: bill
homedirectory: /home/users/bgates
objectclass: inetOrgPerson
objectclass: posixAccount
objectclass: top
sn: gates
uid: bgates
uidnumber: 1000
userpassword: {MD5}ICy5YqxZB1uWSwcVLSNLcA==

# Entry 8: cn=Ivan Franchin,ou=users,dc=example,dc=org
dn: cn=Ivan Franchin,ou=users,dc=example,dc=org
cn: Ivan Franchin
gidnumber: 501
givenname: Ivan
homedirectory: /home/users/ifranchin
objectclass: inetOrgPerson
objectclass: posixAccount
objectclass: top
sn: Franchin
uid: ifranchin
uidnumber: 1003
userpassword: {MD5}ICy5YqxZB1uWSwcVLSNLcA==

# Entry 9: cn=Mark Cuban,ou=users,dc=example,dc=org
dn: cn=Mark Cuban,ou=users,dc=example,dc=org
cn: Mark Cuban
gidnumber: 500
givenname: Mark
homedirectory: /home/users/mcuban
objectclass: inetOrgPerson
objectclass: posixAccount
objectclass: top
sn: Cuban
uid: mcuban
uidnumber: 1002
userpassword: {MD5}ICy5YqxZB1uWSwcVLSNLcA==

# Entry 10: cn=Steve Jobs,ou=users,dc=example,dc=org
dn: cn=Steve Jobs,ou=users,dc=example,dc=org
cn: Steve Jobs
gidnumber: 500
givenname: Steve
homedirectory: /home/users/sjobs
objectclass: inetOrgPerson
objectclass: posixAccount
objectclass: top
sn: Jobs
uid: sjobs
uidnumber: 1001
userpassword: {MD5}ICy5YqxZB1uWSwcVLSNLcA==
EOF


# Start up keycloak
docker run -d --rm -p 8080:8080 --name keycloak \
  -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=password \
  sleighzy/keycloak:16.1.0-arm64

# BIND_DN and BIND_PASSWORD seem to be hard coded.
#  -e LDAP_BIND_DN="cn=admin,dc=example,dc=org" \
#  -e LDAP_BIND_PASSWORD=adminpassword \

docker run -d --name openldap \
  -v /tmp/users.ldif:/ldifs/users.ldif \
  bitnami/openldap:latest

exit 0

# keycloak admin console
http://localhost:8080

# keycloak realm user login url
http://localhost:8080/auth/realms/mytest/account/

# See all the users
ldapsearch -x -D "cn=admin,dc=example,dc=org" -w adminpassword \
  -H ldap://localhost:1389 -b "ou=users,dc=example,dc=org" -s sub '(cn=*)'

ldapsearch -x -D "cn=admin,dc=example,dc=org" -w adminpassword \
  -H ldap://localhost:1389 -b "ou=groups,dc=example,dc=org" -s sub '(cn=*)'

ldapsearch -x -D "cn=admin,dc=example,dc=org" -w adminpassword \
  -H ldap://localhost:1389 -b "dc=example,dc=org" -s sub '(cn=admin*)'
