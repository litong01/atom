#!/bin/bash

cat << EOF > /tmp/ldap.conf
#
# LDAP Defaults
#

# See ldap.conf(5) for details
# This file should be world readable but not world writable.

#BASE	dc=example,dc=com
#URI	ldap://ldap.example.com ldap://ldap-provider.example.com:666

#SIZELIMIT	12
#TIMELIMIT	15
#DEREF		never

# ldapAuth.dnResolution.searchFilter = (|(uid=%u)(mail=%u)(userPrincipalName=%u))
ldapAuth.dnResolution.searchFilter = (|(uid=%u)(userPrincipalName=%u))
EOF

cat << EOF > /tmp/inetorgperson.ldif
# InetOrgPerson (RFC2798)
# $OpenLDAP$
## This work is part of OpenLDAP Software <http://www.openldap.org/>.
##
## Copyright 1998-2022 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.
#
# InetOrgPerson (RFC2798)
#
# Depends upon
#   Definition of an X.500 Attribute Type and an Object Class to Hold
#   Uniform Resource Identifiers (URIs) [RFC2079]
#	(core.ldif)
#
#   A Summary of the X.500(96) User Schema for use with LDAPv3 [RFC2256]
#	(core.ldif)
#
#   The COSINE and Internet X.500 Schema [RFC1274] (cosine.ldif)
#
# This file was automatically generated from inetorgperson.schema; see
# that file for complete references.
#
dn: cn=inetorgperson,cn=schema,cn=config
objectClass: olcSchemaConfig
cn: inetorgperson
olcAttributeTypes: ( 2.16.840.1.113730.3.1.1 NAME 'carLicense' DESC 'RFC279
 8: vehicle license or registration plate' EQUALITY caseIgnoreMatch SUBSTR cas
 eIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: ( 2.16.840.1.113730.3.1.2 NAME 'departmentNumber' DESC '
 RFC2798: identifies a department within an organization' EQUALITY caseIgnoreM
 atch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: ( 2.16.840.1.113730.3.1.241 NAME 'displayName' DESC 'RFC
 2798: preferred name to be used when displaying entries' EQUALITY caseIgnoreM
 atch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 SI
 NGLE-VALUE )
olcAttributeTypes: ( 2.16.840.1.113730.3.1.3 NAME 'employeeNumber' DESC 'RF
 C2798: numerically identifies an employee within an organization' EQUALITY ca
 seIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.12
 1.1.15 SINGLE-VALUE )
olcAttributeTypes: ( 2.16.840.1.113730.3.1.4 NAME 'employeeType' DESC 'RFC2
 798: type of employment for a person' EQUALITY caseIgnoreMatch SUBSTR caseIgn
 oreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: ( 0.9.2342.19200300.100.1.60 NAME 'jpegPhoto' DESC 'RFC2
 798: a JPEG image' SYNTAX 1.3.6.1.4.1.1466.115.121.1.28 )
olcAttributeTypes: ( 2.16.840.1.113730.3.1.39 NAME 'preferredLanguage' DESC
 'RFC2798: preferred written or spoken language for a person' EQUALITY caseIg
 noreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.
 15 SINGLE-VALUE )
olcAttributeTypes: ( 2.16.840.1.113730.3.1.40 NAME 'userSMIMECertificate' D
 ESC 'RFC2798: PKCS#7 SignedData used to support S/MIME' SYNTAX 1.3.6.1.4.1.14
 66.115.121.1.5 )
olcAttributeTypes: ( 2.16.840.1.113730.3.1.216 NAME 'userPKCS12' DESC 'RFC2
 798: personal identity information, a PKCS #12 PFX' SYNTAX 1.3.6.1.4.1.1466.1
 15.121.1.5 )
olcAttributeTypes: (1.2.840.113556.1.4.656
  NAME ( 'userPrincipalName' )
  DESC 'RFC822: user principal name'
  EQUALITY caseIgnoreIA5Match
  SUBSTR caseIgnoreIA5SubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{128} )
olcObjectClasses: ( 2.16.840.1.113730.3.2.2 NAME 'inetOrgPerson' DESC 'RFC2
 798: Internet Organizational Person' SUP organizationalPerson STRUCTURAL MAY
 ( audio $ businessCategory $ carLicense $ departmentNumber $ displayName $ em
 ployeeNumber $ employeeType $ givenName $ homePhone $ homePostalAddress $ ini
 tials $ jpegPhoto $ labeledURI $ mail $ manager $ mobile $ o $ pager $ photo
 $ roomNumber $ secretary $ uid $ userCertificate $ x500uniqueIdentifier $ pre
 ferredLanguage $ userSMIMECertificate $ userPKCS12 $ userPrincipalName) )
EOF


# This script sets up keycloak and ldap and also add ldap schema and users to ldap
# At the end, it added command to verify ldap entry.

# Create a user lidf file, which will be mounted to ldap container to load up
# ldap with users
cat << EOF > /tmp/users.ldif
# LDIF Export for dc=example,dc=org
# Server: openldap (openldap)
# Search Scope: sub
# Search Filter: (objectClass=*)
# Total Entries: 10
#
# Generated by phpLDAPadmin (http://phpldapadmin.sourceforge.net) on March 6, 2018 5:56 pm
# Version: 1.2.3
# Command to produce md5 password
#    slappasswd -h {md5} -s password
#    {MD5}X03MO1qnZdYdgyfeuILPmQ==

version: 1

## Entry 1: dc=example,dc=org
dn: dc=example,dc=org
dc: example
o: "MyExample Inc."
objectclass: top
objectclass: dcObject
objectclass: organization

## Entry 2: cn=admint,dc=example,dc=org
dn: cn=admint,dc=example,dc=org
cn: admint
description: LDAP administrator
objectclass: simpleSecurityObject
objectclass: organizationalRole
userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==

# Entry 3: ou=groups,dc=example,dc=org
dn: ou=groups,dc=example,dc=org
objectclass: organizationalUnit
objectclass: top
ou: groups

# Entry 4: cn=admin,ou=groups,dc=example,dc=org
dn: cn=admin,ou=groups,dc=example,dc=org
cn: admin
gidnumber: 501
memberuid: 1003
objectclass: posixGroup
objectclass: top
userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==

# Entry 5: cn=developers,ou=groups,dc=example,dc=org
dn: cn=developers,ou=groups,dc=example,dc=org
cn: developers
gidnumber: 500
memberuid: 1000
memberuid: 1001
memberuid: 1002
objectclass: posixGroup
objectclass: top

# Entry 6: ou=users,dc=example,dc=org
dn: ou=users,dc=example,dc=org
objectclass: organizationalUnit
objectclass: top
ou: users

# Entry 7: cn=Bill Gates,ou=users,dc=example,dc=org
dn: cn=Bill Gates,ou=users,dc=example,dc=org
cn: Bill Gates
gidnumber: 500
givenname: bill
homedirectory: /home/users/bgates
objectclass: inetOrgPerson
objectclass: posixAccount
objectclass: top
sn: gates
uid: bgates
uidnumber: 1000
mail: bgates@example.org
userPrincipalName: bgates@example.org
userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==

# Entry 8: cn=Ivan Franchin,ou=users,dc=example,dc=org
dn: cn=Ivan Franchin,ou=users,dc=example,dc=org
cn: Ivan Franchin
gidnumber: 501
givenname: Ivan
homedirectory: /home/users/ifranchin
objectclass: inetOrgPerson
objectclass: posixAccount
objectclass: top
sn: Franchin
uid: ifranchin
uidnumber: 1003
mail: ifranchin@example.org
userPrincipalName: ifranchin@example.org
userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==

# Entry 9: cn=Mark Cuban,ou=users,dc=example,dc=org
dn: cn=Mark Cuban,ou=users,dc=example,dc=org
cn: Mark Cuban
gidnumber: 500
givenname: Mark
homedirectory: /home/users/mcuban
objectclass: inetOrgPerson
objectclass: posixAccount
objectclass: top
sn: Cuban
uid: mcuban
uidnumber: 1002
mail: mcuban@example.org
userPrincipalName: mcuban@example.org
userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==

# Entry 10: cn=Steve Jobs,ou=users,dc=example,dc=org
dn: cn=Steve Jobs,ou=users,dc=example,dc=org
cn: Steve Jobs
gidnumber: 500
givenname: Steve
homedirectory: /home/users/sjobs
objectclass: inetOrgPerson
objectclass: posixAccount
objectclass: top
sn: Jobs
uid: sjobs
uidnumber: 1001
mail: sjobs@example.org
userPrincipalName: sjobs@example.org
userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==
EOF


# Start up keycloak
docker run -d --rm -p 8080:8080 --name keycloak \
  -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=password \
  sleighzy/keycloak:16.1.0-arm64

docker run -d --name openldap -e LDAP_LOGLEVEL=4 \
  -v /tmp/users.ldif:/ldifs/users.ldif \
  -v /tmp/inetorgperson.ldif:/opt/bitnami/openldap/etc/schema/inetorgperson.ldif \
  -v /tmp/ldap.conf:/opt/bitnami/openldap/etc/ldap.conf \
  bitnami/openldap:latest

exit 0

# keycloak admin console
http://localhost:8080

# keycloak realm user login url
http://localhost:8080/auth/realms/mytest/account/

# See all the users
ldapsearch -x -D "cn=admin,dc=example,dc=org" -w adminpassword \
  -H ldap://localhost:1389 -b "ou=users,dc=example,dc=org" -s sub '(cn=*)'

ldapsearch -x -D "cn=admin,dc=example,dc=org" -w adminpassword \
  -H ldap://localhost:1389 -b "ou=groups,dc=example,dc=org" -s sub '(cn=*)'

# this is the default admin user with default password
ldapsearch -x -D "cn=admin,dc=example,dc=org" -w adminpassword \
  -H ldap://localhost:1389 -b "dc=example,dc=org" -s sub '(cn=admin*)'

# this is the admin user with set password
ldapsearch -x -D "cn=admin,ou=groups,dc=example,dc=org" -w password \
  -H ldap://localhost:1389 -b "dc=example,dc=org" -s sub '(cn=Steve*)'
