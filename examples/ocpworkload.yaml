---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: test-scc
allowPrivilegedContainer: true
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: RunAsAny
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: test-role
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - test-scc
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-role-binding
subjects:
- kind: ServiceAccount
  name: test-account
  namespace: test1
roleRef:
  kind: Role
  name: test-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: test-cluster-role
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - anyuid
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-cluster-role
subjects:
- kind: ServiceAccount
  name: test-account
  namespace: test1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvcdata
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginxconfig
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;    
    error_log  /dev/stderr warn;
    events {
        worker_connections  32;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
    
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
    
        access_log  /dev/stdout main;
        access_log  /var/log/nginx/access_log main;

        sendfile        on;
        keepalive_timeout  65;
    
        server {
            listen       80;
            server_name  localhost;
    
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
        }
    
        server {
            listen       443    ssl;
            server_name  localhost;
    
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
    
            ssl_certificate /certs/server.crt;
            ssl_certificate_key /certs/server.key;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: networktools
  name: networktools
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: networktools
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: networktools
  name: networktools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: networktools
  template:
    metadata:
      labels:
        app: networktools
    spec:
      serviceAccountName: test-account
      containers:
      - image: email4tong/network-tools
        imagePullPolicy: IfNotPresent
        name: network-tools
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: storage
          mountPath: "/var/log/nginx"
        - name: nginxconfig
          mountPath: "/etc/nginx/nginx.conf"
          subPath: nginx.conf
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: pvcdata
        - name: nginxconfig
          configMap:
            name: nginxconfig
---
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-world-not-protected
  labels:
    astra.netapp.io/protected: "false"
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 0
  template:
    spec:
      containers:
      - name: hello
        image: busybox
        command: ["echo", "Hello World"]
      restartPolicy: Never
---
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-world-protected
  labels:
    astra.netapp.io/protected: "true"
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 0
  template:
    spec:
      containers:
      - name: hello
        image: busybox
        command: ["echo", "Hello World"]
      restartPolicy: Never
